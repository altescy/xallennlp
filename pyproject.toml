[tool.poetry]
name = "xallennlp"
version = "0.4.2"
description = "Expanded AllenNLP"
authors = ["altescy <altescy@fastmail.com>"]
license = "MIT License"
readme = "README.md"
keywords = ["nlp", "pytorch", "allennlp", "mlflow", "optuna", "fasttext"]

[tool.poetry.dependencies]
python = "^3.8"
allennlp = ">=2.0.0,<3.0.0"
mlflow = {version = "^1.9.0", optional = true}
flatten_dict = "^0.4.0"
spacy = "^3.1.2"
fasttext = "^0.9.2"
allennlp-optuna = {version = "^0.1.6", optional = true}
fugashi = {version = "^1.1.1", optional = true, extras = ["unidic-lite"]}
wandb = "^0.12.6"

[tool.poetry.dev-dependencies]
pytest = "^5.4.3"
pysen = "^0.10.1"
black = "^21.12b0"
flake8 = "^4.0.1"
isort = "^5.10.1"
mypy = "^0.931"
types-PyYAML = "^6.0.3"

[tool.poetry.extras]
mlflow = ["mlflow"]
optuna = ["allennlp-optuna"]
fugashi = ["fugashi"]
all = ["mlflow", "optuna", "fugashi"]

[tool.poetry.scripts]
xallennlp = "xallennlp.__main__:run"

[tool.pytest.ini_options]
testpaths = ["tests/"]
log_format = "%(asctime)s - %(levelname)s - %(name)s - %(message)s"
log_level = "DEBUG"
markers = ["java"]
filterwarnings = [
    "ignore::DeprecationWarning",
    "ignore::PendingDeprecationWarning",
]

[tool.pysen]
version = "0.10"

[tool.pysen.lint]
enable_black = true
enable_flake8 = true
enable_isort = true
enable_mypy = true
mypy_preset = "strict"
line_length = 120
py_version = "py38"
mypy_ignore_packages = ["transformers.trainer"]  # https://github.com/huggingface/transformers/issues/13390

[tool.pysen.lint.source]
  includes = ["."]
  excludes = [".venv/"]

[[tool.pysen.lint.mypy_targets]]
  paths = ["."]

[tool.black] # automatically generated by pysen
line-length = 120
target-version = ["py38"]

[tool.isort] # automatically generated by pysen
default_section = "THIRDPARTY"
ensure_newline_before_comments = true
force_grid_wrap = 0
force_single_line = false
include_trailing_comma = true
line_length = 120
multi_line_output = 3
use_parentheses = true
[build-system]
requires = ["poetry>=0.12"]
build-backend = "poetry.masonry.api"
